Test file

DECLARE
    v_sql   VARCHAR2(4000);
    v_count NUMBER;
BEGIN
    FOR col IN (
        SELECT column_name
        FROM all_tab_columns
        WHERE table_name = 'YOUR_TABLE_NAME'
        AND owner = 'YOUR_SCHEMA_NAME'
    ) LOOP
        v_sql := 'SELECT COUNT(1) FROM ' || col.table_name || ' WHERE ' || col.column_name || ' IS NOT NULL';
        EXECUTE IMMEDIATE v_sql INTO v_count;
        
        IF v_count = 0 THEN
            DBMS_OUTPUT.PUT_LINE(col.column_name || ' has only NULL values');
        END IF;
    END LOOP;
END;
/

java.lang.NoSuchMethodError: com.mongodb.client.MongoDatabase.listCollectionNames()‚Äù. 

mongodb-driver-core - org.mongodb:mongodb-driver-core:jar:5.0.1
spring-data-mongodb - org.springframework.data:spring-data-mongodb:jar:3.3.4
mongodb-driver-sync - org.mongodb:mongodb-driver-sync:jar:5.0.1


import pandas as pd
import fastavro
from fastavro.schema import load_schema

# Example DataFrame
data = {
    'column1': [1, 2, 3],
    'column2': ['A', 'B', 'C'],
    'column3': [True, False, True]
}

df = pd.DataFrame(data)

# Define Avro schema
schema = {
    "type": "record",
    "name": "ExampleRecord",
    "fields": [
        {"name": "column1", "type": "int"},
        {"name": "column2", "type": "string"},
        {"name": "column3", "type": "boolean"}
    ]
}

# Convert DataFrame to Avro records
records = df.to_dict('records')\




# Write Avro file
with open('output.avro', 'wb') as out:
    fastavro.writer(out, schema, records)



# Specify the path to your .sql file
sql_file_path = 'path/to/your/file.sql'

# Open and read the SQL file
with open(sql_file_path, 'r') as file:
    sql_query = file.read()

# Now sql_query contains the SQL commands as a string
print(sql_query)
